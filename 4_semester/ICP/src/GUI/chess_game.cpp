#include "includes/chess_game.h"

/**
*@author Jaromir Hradil, xhradi15@fit.vutbr.cz
*/


    //Constructor
    /**
    *Constructor for chess_game class, which creates main window administration for tabs
    *@param app Pointer to default application for inding it properly, when all tabs are closed
    */
    chess_game :: chess_game(QApplication * app)
    {
      this->resize(1560,960);
      this->setUpTabWidget();
      connect(this->tabWidget, SIGNAL(tabCloseRequested(int)), this, SLOT(slotCloseTab(int)));
      connect(this->tabButton, SIGNAL (clicked()),this, SLOT (addTab()));
      this->setUpNewTab();
      this->application = app;
    }


    //Creating new tab
    void chess_game :: setUpNewTab()
    {

      QString string = QString::number(this->count);
      //Creating new tab interface
      this->tabForm = new game_menu(this);
      this->tabWidget->addTab(this->tabForm, string);//Adding tab to widget
      this->tabWidget->setCurrentIndex(this->tabWidget->count()-1);//Switching to new tab
      this->count++;//Increasing a number

    }

    /**
    *@param index Number of tab to close
    */
    void chess_game ::  slotCloseTab(int index)
    {
      //Finding tab with required index to close
      QWidget * tabToRemove = this->tabWidget->widget(index);
      this->tabWidget->removeTab(index);
      delete tabToRemove;

      //If it was last tab, application ends
      if(this->tabWidget->count() == 0)
      {
        this->application->exit();
      }
    }

  void chess_game ::  addTab()
  {//Adding new tab
    this->setUpNewTab();
  }


  void chess_game :: setUpTabWidget()
   {  //New main tab window


     //Setting font size
     QFont font;
     font.setPointSize(13);

/****************************************************************************************************/
     //Setting position, size and other attributes of main tab window
     //Generated by QtCreator
     this->tabWidget = new QTabWidget(this);
     this->tabWidget->setEnabled(true);
     this->tabWidget->setGeometry(QRect(-20, -10, 1541, 951));
     this->tabWidget->setMaximumSize(QSize(1541, 951));
     this->tabWidget->setFont(font);
     this->tabWidget->setAutoFillBackground(false);
     this->tabWidget->setStyleSheet(QLatin1String("QWidget \n""{\n""	background-color:rgb(189, 117, 44);\n""}\n"""));
     this->tabWidget->setTabShape(QTabWidget::Triangular);
     this->tabWidget->setTabsClosable(true);
     this->tabWidget->setTabBarAutoHide(false);

/***************************************************************************************************/
     //Adding new tab button at right corner of the widget
     this->tabButton = new QPushButton(this->tabWidget);
     this->tabButton->setText("+");
     this->tabButton->setLayoutDirection(Qt::LeftToRight);
     this->tabButton->setStyleSheet(QStringLiteral(" background-color:rgb(233, 185, 110)"));

     this->tabWidget->setCornerWidget(this->tabButton,Qt::TopRightCorner);

     //Setting ability to close tabs

   }
   //Destructor
   chess_game :: ~ chess_game()
   {
     delete tabWidget;
   }
