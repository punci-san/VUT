.IFJcode18
CREATEFRAME
PUSHFRAME
JUMP	$function$ahoj$continue$jump
LABEL	$fun$ahoj
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
DEFVAR	LF@a
MOVE	LF@a	LF@%1
DEFVAR	LF@$tmp0
MOVE	LF@$tmp0	nil@nil
DEFVAR	LF@$tmp1
MOVE	LF@$tmp1	nil@nil
DEFVAR	LF@$tmp2
MOVE	LF@$tmp2	nil@nil
DEFVAR	LF@$tmp3
MOVE	LF@$tmp3	nil@nil
DEFVAR	LF@$tmp4
MOVE	LF@$tmp4	nil@nil
DEFVAR	LF@$tmp6
MOVE	LF@$tmp6	nil@nil
LABEL	$if$else$0$start
MOVE	LF@$tmp0	LF@a
MOVE	LF@$tmp1	string@Ahoj
TYPE	LF@$tmp3	LF@$tmp0
TYPE	LF@$tmp4	LF@$tmp1
JUMPIFNEQ	$label$next$nil$check$bothequal$0 	LF@$tmp3	string@string
JUMPIFEQ	$label$eqnot$bothequal$0 	LF@$tmp4	string@string
JUMP	$label$false$bothequal$0 
LABEL	$label$next$nil$check$bothequal$0 
JUMPIFNEQ	$label$next$bool$check$bothequal$0 	LF@$tmp3	string@nil
JUMPIFEQ	$label$eqnot$bothequal$0 	LF@$tmp4	string@nil
JUMP	$label$false$bothequal$0 
LABEL	$label$next$bool$check$bothequal$0 
JUMPIFNEQ	$label$next$intfloat$check$bothequal$0 	LF@$tmp3	string@bool
JUMPIFEQ	$label$eqnot$bothequal$0 	LF@$tmp4	string@bool
JUMP	$label$false$bothequal$0 
LABEL	$label$next$intfloat$check$bothequal$0 
JUMPIFNEQ	$label$next$floatint$check$bothequal$0 	LF@$tmp3	string@int
JUMPIFEQ	$label$eqnot$bothequal$0 	LF@$tmp4	string@int
JUMPIFEQ	$label$first$inttofloat$bothequal$0 	LF@$tmp4	string@float
JUMP	$label$false$bothequal$0 
LABEL	$label$next$floatint$check$bothequal$0 
JUMPIFEQ	$label$eqnot$bothequal$0 	LF@$tmp4	string@float
JUMPIFEQ	$label$second$inttofloat$bothequal$0 	LF@$tmp4	string@int
JUMP	$label$false$bothequal$0 
LABEL	$label$first$inttofloat$bothequal$0 
INT2FLOAT	LF@$tmp0	LF@$tmp0
JUMP	$label$eqnot$bothequal$0 
LABEL	$label$second$inttofloat$bothequal$0 
INT2FLOAT	LF@$tmp1	LF@$tmp1
LABEL	$label$eqnot$bothequal$0 
EQ	LF@$tmp2	LF@$tmp0	LF@$tmp1
JUMP	$label$end$bothequal$0 
LABEL	$label$false$bothequal$0 
MOVE	LF@$tmp2	bool@false
LABEL	$label$end$bothequal$0 
TYPE	LF@$tmp6	LF@$tmp2
JUMPIFNEQ	$if$else$0$next$check	LF@$tmp6	string@bool
JUMPIFEQ	$if$else$0$else	LF@$tmp2	bool@false
JUMP	$if$else$0$if
LABEL	$if$else$0$next$check
JUMPIFEQ	$if$else$0$else	LF@$tmp6	string@nil
LABEL	$if$else$0$if
MOVE	LF@%retval	nil@nil
PUSHS	LF@a
CREATEFRAME
DEFVAR	TF@%1
MOVE	TF@%1	int@1
CALL	$fun$print
JUMP	$if$else$0$end
LABEL	$if$else$0$else
MOVE	LF@%retval	nil@nil
LABEL	$if$else$0$end
POPFRAME
RETURN
LABEL	$function$ahoj$continue$jump
DEFVAR	LF@str
MOVE	LF@str	nil@nil
MOVE	LF@str	string@Ahoj
CREATEFRAME
DEFVAR	TF@%1
MOVE	TF@%1	LF@str
CALL	$fun$ahoj
JUMP	$$main
LABEL	$fun$inputs
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
READ	LF@%retval	string
POPFRAME
RETURN
LABEL	$fun$inputi
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
READ	LF@%retval	int
POPFRAME
RETURN
LABEL	$fun$inputf
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
READ	LF@%retval	float
POPFRAME
RETURN
LABEL	$fun$print
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
DEFVAR	LF@param1
MOVE	LF@param1	LF@%1
DEFVAR	LF@param2
MOVE	LF@param2	nil@nil
LABEL	$fun$print$loop
JUMPIFEQ	$fun$print$end	LF@param1	int@0
POPS	LF@param2
WRITE	LF@param2
SUB	LF@param1	LF@param1	int@1
JUMP	$fun$print$loop
LABEL	$fun$print$end
CLEARS
POPFRAME
RETURN
LABEL	$fun$length
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
DEFVAR	LF@param1
MOVE	LF@param1	LF@%1
DEFVAR	LF@param2
TYPE	LF@param2	LF@param1
JUMPIFEQ	$fun$length$strlen	LF@param2	string@string
EXIT	int@4
LABEL	$fun$length$strlen
STRLEN	LF@%retval	LF@param1
POPFRAME
RETURN
LABEL	$fun$substr
PUSHFRAME
DEFVAR	LF@%retval
DEFVAR	LF@param1
DEFVAR	LF@param2
DEFVAR	LF@param3
MOVE	LF@%retval	string@
MOVE	LF@param1	LF@%1
MOVE	LF@param2	LF@%2
MOVE	LF@param3	LF@%3
DEFVAR	LF@$type$param1
DEFVAR	LF@$type$param2
DEFVAR	LF@$type$param3
TYPE	LF@$type$param1	LF@param1
LABEL	$fun$substr$again$check
TYPE	LF@$type$param2	LF@param2
TYPE	LF@$type$param3	LF@param3
JUMPIFNEQ	$fun$substr$error	LF@$type$param1	string@string
JUMPIFNEQ	$fun$substr$error	LF@$type$param2	string@int
JUMPIFNEQ	$fun$substr$error	LF@$type$param3	string@int
JUMP	$fun$substr$next$check
LABEL	$fun$substr$error
JUMPIFEQ	$fun$substr$floattoint$first	LF@$type$param2	string@float
JUMPIFEQ	$fun$substr$floattoint$second	LF@$type$param3	string@float
JUMPIFEQ	$fun$substr$next$check	LF@$type$param3	string@int
EXIT	int@4
LABEL	$fun$substr$floattoint$first
FLOAT2INT	LF@param2	LF@param2
JUMP	$fun$substr$again$check
LABEL	$fun$substr$floattoint$second
FLOAT2INT	LF@param3	LF@param3
LABEL	$fun$substr$next$check
DEFVAR	LF@$fun$substr$tmp0
DEFVAR	LF@$fun$substr$tmp1
DEFVAR	LF@$fun$substr$tmp2
DEFVAR	LF@$fun$substr$tmp3
STRLEN	LF@$fun$substr$tmp2	LF@param1
LT	LF@$fun$substr$tmp0	LF@param2	int@0
GT	LF@$fun$substr$tmp1	LF@param2	LF@$fun$substr$tmp2
OR	LF@$fun$substr$tmp3	LF@$fun$substr$tmp0	LF@$fun$substr$tmp1
JUMPIFEQ	$fun$substr$return$nil	LF@$fun$substr$tmp3	bool@true
ADD	LF@param3	LF@param2	LF@param3
GT	LF@$fun$substr$tmp0	LF@param3	LF@$fun$substr$tmp2
JUMPIFEQ	$fun$substr$loop	LF@$fun$substr$tmp0	bool@false
MOVE	LF@param3	LF@$fun$substr$tmp2
LABEL	$fun$substr$loop
JUMPIFEQ	$fun$substr$return	LF@param2	LF@param3
GETCHAR	LF@$fun$substr$tmp0	LF@param1	LF@param2
CONCAT	LF@%retval	LF@%retval	LF@$fun$substr$tmp0
ADD	LF@param2	LF@param2	int@1
JUMP	$fun$substr$loop
LABEL	$fun$substr$return$nil
MOVE	LF@%retval	nil@nil
LABEL	$fun$substr$return
POPFRAME
RETURN
LABEL	$fun$ord
PUSHFRAME
DEFVAR	LF@%retval
DEFVAR	LF@param1
DEFVAR	LF@param2
MOVE	LF@%retval	nil@nil
MOVE	LF@param1	LF@%1
MOVE	LF@param2	LF@%2
DEFVAR	LF@$type$param1
DEFVAR	LF@$type$param2
TYPE	LF@$type$param1	LF@param1
TYPE	LF@$type$param2	LF@param2
JUMPIFNEQ	$fun$ord$error	LF@$type$param1	string@string
JUMPIFNEQ	$fun$ord$error	LF@$type$param2	string@int
JUMP	$fun$ord$next$check
LABEL	$fun$ord$error
JUMPIFEQ	$fun$ord$floattoint	LF@$type$param2	string@float
EXIT	int@4
LABEL	$fun$ord$floattoint
FLOAT2INT	LF@param2	LF@param2
LABEL	$fun$ord$next$check
DEFVAR	LF@$fun$ord$tmp0
DEFVAR	LF@$fun$ord$tmp1
DEFVAR	LF@$fun$ord$tmp2
STRLEN	LF@$fun$ord$tmp2	LF@param1
SUB	LF@$fun$ord$tmp2	LF@$fun$ord$tmp2	int@1
LT	LF@$fun$ord$tmp0	LF@param2	int@0
GT	LF@$fun$ord$tmp1	LF@param2	LF@$fun$ord$tmp2
OR	LF@$fun$ord$tmp0	LF@$fun$ord$tmp0	LF@$fun$ord$tmp1
JUMPIFEQ	$fun$ord$return$nil	LF@$fun$ord$tmp0	bool@true
GETCHAR	LF@%retval	LF@param1	LF@param2
STRI2INT	LF@%retval	LF@%retval	int@0
LABEL	$fun$ord$return$nil
POPFRAME
RETURN
LABEL	$fun$chr
PUSHFRAME
DEFVAR	LF@%retval
DEFVAR	LF@param1
MOVE	LF@%retval	nil@nil
MOVE	LF@param1	LF@%1
DEFVAR	LF@$type$param1
TYPE	LF@$type$param1	LF@param1
JUMPIFEQ	$fun$chr$continue	LF@$type$param1	string@int
JUMPIFEQ	$fun$chr$floattoint$continue	LF@$type$param1	string@float
EXIT	int@4
LABEL	$fun$chr$floattoint$continue
FLOAT2INT	LF@param1	LF@param1
LABEL	$fun$chr$continue
DEFVAR	LF@$fun$chr$tmp$0
GT	LF@$fun$chr$tmp$0	LF@param1	int@-1
LT	LF@$type$param1	LF@param1	int@256
AND	LF@$fun$chr$tmp$0	LF@$fun$chr$tmp$0	LF@$type$param1
JUMPIFEQ	$fun$chr$continue$continue	LF@$fun$chr$tmp$0	bool@true
EXIT	int@4
LABEL	$fun$chr$continue$continue
INT2CHAR	LF@%retval	LF@param1
POPFRAME
RETURN
LABEL	$$main
POPFRAME
