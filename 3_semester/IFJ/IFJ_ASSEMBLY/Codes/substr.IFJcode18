.IFJcode18
CREATEFRAME
PUSHFRAME
DEFVAR	LF@a
MOVE	LF@a	nil@nil
MOVE	LF@a	int@5
DEFVAR	LF@b
MOVE	LF@b	nil@nil
MOVE	LF@b	int@10
DEFVAR	LF@$tmp0
MOVE	LF@$tmp0	nil@nil
MOVE	LF@$tmp0	LF@b
DEFVAR	LF@$tmp1
MOVE	LF@$tmp1	nil@nil
MOVE	LF@$tmp1	LF@b
DEFVAR	LF@$tmp2
MOVE	LF@$tmp2	nil@nil
DEFVAR	LF@$tmp3
MOVE	LF@$tmp3	nil@nil
DEFVAR	LF@$tmp4
MOVE	LF@$tmp4	nil@nil
TYPE	LF@$tmp3	LF@$tmp0
TYPE	LF@$tmp4	LF@$tmp1
JUMPIFEQ	$label$second$intfloat$check$minusmultiply$0 	LF@$tmp3	string@int
JUMPIFEQ	$label$second$floatint$check$minusmultiply$0 	LF@$tmp3	string@float
EXIT	int@4
LABEL	$label$second$intfloat$check$minusmultiply$0
JUMPIFEQ	$label$submul$minusmultiply$0 	LF@$tmp4	string@int
JUMPIFEQ	$label$first$inttofloat$minusmultiply$0 	LF@$tmp4	string@float
EXIT	int@4
LABEL	$label$second$floatint$check$minusmultiply$0
JUMPIFEQ	$label$submul$minusmultiply$0 	LF@$tmp4	string@float
JUMPIFEQ	$label$second$inttofloat$minusmultiply$0 	LF@$tmp4	string@int
EXIT	int@4
LABEL	$label$first$inttofloat$minusmultiply$0
INT2FLOAT	LF@$tmp0	LF@$tmp0
JUMP	$label$submul$minusmultiply$0
LABEL	$label$second$inttofloat$minusmultiply$0
INT2FLOAT	LF@$tmp1	LF@$tmp1
LABEL	$label$submul$minusmultiply$0
MUL	LF@$tmp2	LF@$tmp0	LF@$tmp1
DEFVAR	LF@$tmp6
MOVE	LF@$tmp6	nil@nil
MOVE	LF@$tmp6	LF@a
DEFVAR	LF@$tmp7
MOVE	LF@$tmp7	nil@nil
MOVE	LF@$tmp7	LF@$tmp2
DEFVAR	LF@$tmp8
MOVE	LF@$tmp8	nil@nil
DEFVAR	LF@$tmp9
MOVE	LF@$tmp9	nil@nil
DEFVAR	LF@$tmp10
MOVE	LF@$tmp10	nil@nil
TYPE	LF@$tmp9	LF@$tmp6
TYPE	LF@$tmp10	LF@$tmp7
JUMPIFEQ	$label$second$string$check$plus$6 	LF@$tmp9	string@string
JUMPIFEQ	$label$second$intfloat$check$plus$6 	LF@$tmp9	string@int
JUMPIFEQ	$label$second$floatint$check$plus$6 	LF@$tmp9	string@float
EXIT	int@4
LABEL	$label$second$string$check$plus$6
JUMPIFEQ	$label$concat$plus$6 	LF@$tmp10	string@string
EXIT	int@4
LABEL	$label$second$intfloat$check$plus$6
JUMPIFEQ	$label$add$plus$6 	LF@$tmp10	string@int
JUMPIFEQ	$label$firsttofloat$plus$6 	LF@$tmp10	string@float
EXIT	int@4
LABEL	$label$second$floatint$check$plus$6
JUMPIFEQ	$label$add$plus$6 	LF@$tmp10	string@float
JUMPIFEQ	$label$secondtofloat$plus$6 	LF@$tmp10	string@int
EXIT	int@4
LABEL	$label$concat$plus$6
CONCAT	LF@$tmp8	LF@$tmp6	LF@$tmp7
JUMP	$label$end$plus$6
LABEL	$label$firsttofloat$plus$6
INT2FLOAT	LF@$tmp6	LF@$tmp6
JUMP	$label$add$plus$6
LABEL	$label$secondtofloat$plus$6
INT2FLOAT	LF@$tmp7	LF@$tmp7
LABEL	$label$add$plus$6
ADD	LF@$tmp8	LF@$tmp6	LF@$tmp7
LABEL	$label$end$plus$6
DEFVAR	LF@c
MOVE	LF@c	nil@nil
MOVE	LF@c	LF@$tmp8
PUSHS	LF@a
PUSHS	string@\032\032
PUSHS	LF@b
PUSHS	string@\032\032
PUSHS	LF@c
CREATEFRAME
DEFVAR	TF@%1
MOVE	TF@%1	int@5
CALL	$fun$print
JUMP	$$main
LABEL	$fun$inputs
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
READ	LF@%retval	string
POPFRAME
RETURN
LABEL	$fun$inputi
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
READ	LF@%retval	int
POPFRAME
RETURN
LABEL	$fun$inputf
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
READ	LF@%retval	float
POPFRAME
RETURN
LABEL	$fun$print
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
DEFVAR	LF@param1
MOVE	LF@param1	LF@%1
DEFVAR	LF@param2
MOVE	LF@param2	nil@nil
LABEL	$fun$print$loop
JUMPIFEQ	$fun$print$end	LF@param1	int@0
POPS	LF@param2
WRITE	LF@param2
SUB	LF@param1	LF@param1	int@1
JUMP	$fun$print$loop
LABEL	$fun$print$end
CLEARS
POPFRAME
RETURN
LABEL	$fun$length
PUSHFRAME
DEFVAR	LF@%retval
MOVE	LF@%retval	nil@nil
DEFVAR	LF@param1
MOVE	LF@param1	LF@%1
DEFVAR	LF@param2
TYPE	LF@param2	LF@param1
JUMPIFEQ	$fun$length$strlen	LF@param2	string@string
EXIT	int@4
LABEL	$fun$length$strlne
STRLEN	LF@%retval	LF@param1
POPFRAME
RETURN
LABEL	$fun$substr
PUSHFRAME
DEFVAR	LF@%retval
DEFVAR	LF@param1
DEFVAR	LF@param2
DEFVAR	LF@param3
MOVE	LF@%retval	string@
MOVE	LF@param1	LF@%1
MOVE	LF@param2	LF@%2
MOVE	LF@param3	LF@%3
DEFVAR	LF@$type$param1
DEFVAR	LF@$type$param2
DEFVAR	LF@$type$param3
JUMPIFEQ	$fun$substr$error	LF@$type$param1	string@string
JUMPIFEQ	$fun$substr$error	LF@$type$param2	string@int
JUMPIFEQ	$fun$substr$error	LF@$type$param3	string@int
JUMP	$fun$substr$next$check
LABEL	$fun$substr$error
EXIT	int@4
LABEL	$fun$substr$next$check
DEFVAR	LF@$fun$substr$tmp0
DEFVAR	LF@$fun$substr$tmp1
DEFVAR	LF@$fun$substr$tmp2
DEFVAR	LF@$fun$substr$tmp3
STRLEN	LF@fun$substr$tmp0	LF@param1
LT	LF@fun$substr$tmp0	LF@param2	int@0
GT	LF@fun$substr$tmp1	LF@param2	LF@$fun$substr$tmp2
OR	LF@fun$substr$tmp3	LF@fun$substr$tmp0	LF@fun$substr$tmp1
JUMPIFEQ	$fun$substr$return$nil	LF@fun$substr$tmp3	bool@true
ADD	LF@param3	LF@param2	LF@param3
GT	LF@fun$substr$tmp0	LF@param3	LF@$fun$substr$tmp2
JUMPIFEQ	$fun$substr$loop	LF@fun$substr$tmp0	bool@false
MOVE	LF@param3	LF@fun$substr$tmp2
LABEL	$fun$substr$loop
JUMPIFEQ	$fun$substr$return	LF@param2	LF@param3
GETCHAR	LF@fun$substr$tmp0	LF@param1	LF@param2
CONCAT	LF@%retval	LF@%retval	LF@$fun$substr$tmp0
ADD	LF@param2	LF@param2	int@1
JUMP	$fun$substr$loop
LABEL	$fun$substr$return$nil
MOVE	LF@%retval	nil@nil
LABEL	$fun$substr$return
POPFRAME
RETURN
LABEL	$fun$ord
PUSHFRAME
DEFVAR	LF@%retval
DEFVAR	LF@param1
DEFVAR	LF@param2
MOVE	LF@%retval	nil@nil
MOVE	LF@param1	LF@%1
MOVE	LF@param2	LF@%2
DEFVAR	LF@$type$param1
DEFVAR	LF@$type$param2
TYPE	LF@$type$param1	LF@param1
TYPE	LF@$type$param2	LF@param2
JUMPIFEQ	$fun$ord$error	LF@$type$param1	string@string
JUMPIFEQ	$fun$ord$error	LF@$type$param1	string@int
JUMP	$fun$ord$next$check
LABEL	$fun$ord$error
EXIT	int@4
LABEL	$fun$ord$next$check
DEFVAR	LF@$fun$ord$tmp0
DEFVAR	LF@$fun$ord$tmp1
DEFVAR	LF@$fun$ord$tmp2
STRLEN	LF@$fun$ord$tmp2	LF@param1
SUB	LF@$fun$ord$tmp2	LF@$fun$ord$tmp2	int@1
LT	LF@$fun$ord$tmp0	LF@param2	int@0
GT	LF@$fun$ord$tmp1	LF@param2	LF@$fun$ord$tmp2
OR	LF@$fun$ord$tmp0	LF@$fun$ord$tmp0	LF@$fun$ord$tmp1
JUMPIFEQ	$fun$ord$return$nil	LF@$fun$ord$tmp0	bool@true
GETCHAR	LF@%retval	LF@param1	LF@param2
STRI2INT	LF@%retval	LF@%retval	int@0
LABEL	$fun$ord$return$nil
POPFRAME
RETURN
LABEL	$fun$chr
PUSHFRAME
DEFVAR	LF@%retval
DEFVAR	LF@param1
MOVE	LF@%retval	nil@nil
MOVE	LF@param1	LF@%1
DEFVAR	LF@$type$param1
TYPE	LF@$type$param1	LF@param1
JUMPIFEQ	$fun$chr$continue	LF@$type$param1	string@int
EXIT	int@4
LABEL	$fun$chr$continue
INT2CHAR	LF@%retval	LF@param1
POPFRAME
RETURN
LABEL	$$main
POPFRAME
